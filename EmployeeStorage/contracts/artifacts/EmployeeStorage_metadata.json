{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "_shares",
						"type": "uint16"
					},
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint24",
						"name": "_salary",
						"type": "uint24"
					},
					{
						"internalType": "uint256",
						"name": "_idNumber",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_slot",
						"type": "uint256"
					}
				],
				"name": "checkForPacking",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "r",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "debugResetShares",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "_newShares",
						"type": "uint16"
					}
				],
				"name": "grantShares",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "idNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "viewSalary",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "viewShares",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Experiment with sol storage",
			"kind": "dev",
			"methods": {},
			"title": "EmployeeStorage",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"checkForPacking(uint256)": {
					"notice": "Do not modify this function.  It is used to enable the unit test for this pin to check whether or not you have configured your storage variables to make use of packing. If you wish to cheat, simply modify this function to always return `0` I'm not your boss ¯\\_(ツ)_/¯ Fair warning though, if you do cheat, it will be on the blockchain having been deployed by you wallet....FOREVER!"
				},
				"debugResetShares()": {
					"notice": "Warning: Anyone can use this function at any time!"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"EmployeeStorage/contracts/EmployeeStorage.sol": "EmployeeStorage"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"EmployeeStorage/contracts/EmployeeStorage.sol": {
			"keccak256": "0x6fff4a7d60342d7ca553eadbe6e3eb1daebfe7b6cdb1355821a768fe226e1cdd",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://192c7c275d395e4abb1d65e7181a6e78d540460e0821a74a1e004b40b4ceca8d",
				"dweb:/ipfs/QmNM3VXY4Tkw6bC54NDDrs9ZEQxsJ6rxSCJdUQRR6yGUoB"
			]
		}
	},
	"version": 1
}